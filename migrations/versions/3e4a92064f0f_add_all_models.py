"""add all models

Revision ID: 3e4a92064f0f
Revises: 88ec7942fede
Create Date: 2025-05-21 12:15:20.914997

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3e4a92064f0f'
down_revision: Union[str, None] = '88ec7942fede'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('nom', sa.String(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('superficie', sa.Float(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('pluviometrie_moyenne', sa.Float(), nullable=True),
    sa.Column('temperature_moyenne', sa.Float(), nullable=True),
    sa.Column('type_sol', sa.String(), nullable=True),
    sa.Column('irrigation', sa.Float(), nullable=True),
    sa.Column('region_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('historique_allocations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_regions_geom', 'regions', ['geom'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_regions_code'), 'regions', ['code'], unique=True)
    op.create_index(op.f('ix_regions_id'), 'regions', ['id'], unique=False)
    op.create_table('departements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('nom', sa.String(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('superficie', sa.Float(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('pluviometrie_moyenne', sa.Float(), nullable=True),
    sa.Column('temperature_moyenne', sa.Float(), nullable=True),
    sa.Column('type_sol', sa.String(), nullable=True),
    sa.Column('irrigation', sa.Float(), nullable=True),
    sa.Column('department_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('historique_allocations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_departements_geom', 'departements', ['geom'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_departements_code'), 'departements', ['code'], unique=True)
    op.create_index(op.f('ix_departements_id'), 'departements', ['id'], unique=False)
    op.create_table('allocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('annee', sa.Integer(), nullable=False),
    sa.Column('type_semence', sa.Enum('RIZ', 'MIL', 'SORGHO', 'MAIS', 'ARACHIDE', 'NIÉBÉ', 'AUTRE', name='typesemence'), nullable=False),
    sa.Column('quantite', sa.Float(), nullable=False),
    sa.Column('niveau', sa.String(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('departement_id', sa.Integer(), nullable=True),
    sa.Column('facteurs_influence', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['departement_id'], ['departements.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_allocations_id'), 'allocations', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_allocations_id'), table_name='allocations')
    op.drop_table('allocations')
    op.drop_index(op.f('ix_departements_id'), table_name='departements')
    op.drop_index(op.f('ix_departements_code'), table_name='departements')
    op.drop_index('idx_departements_geom', table_name='departements', postgresql_using='gist')
    op.drop_table('departements')
    op.drop_index(op.f('ix_regions_id'), table_name='regions')
    op.drop_index(op.f('ix_regions_code'), table_name='regions')
    op.drop_index('idx_regions_geom', table_name='regions', postgresql_using='gist')
    op.drop_table('regions')
    # ### end Alembic commands ###
